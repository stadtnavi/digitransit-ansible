#!/bin/bash

set -euo pipefail

CURL_OPTS="--location --fail -s --show-error -#"
WORKDIR=/var/poi/
POI_FILE="$WORKDIR/osm-pois.osm.pbf"

PBF_URL={{ poi_pbf_download_url }}
TMP_BUILD_DB="poi_next"

STADTNAVI_CONFIG_URL='https://docs.google.com/spreadsheets/d/1-iKEeaits4W1EPoMzI29uazZRZJ9s2GJGUPnkO9GzKM/gviz/tq?tqx=out:csv&sheet=Layer'
#
#  Download or update OSM data from Geofabrik
#


if [[ -e "$WORKDIR/osm-data.osm.pbf" ]]; then
    pyosmium-up-to-date "$WORKDIR/osm-data.osm.pbf"
else
    curl $CURL_OPTS -o "$WORKDIR/osm-data.osm.pbf" $PBF_URL
fi

osmium tags-filter --remove-tags --overwrite -o $POI_FILE \
    "$WORKDIR/osm-data.osm.pbf" \
    amenity leisure office shop tourism landuse=cemetery natural=spring

DIR=/tmp

# This env var is read by osm2pgsql config to find the file
export STADTNAVI_CONFIG="$WORKDIR/stadtnavi-config.csv"

curl --silent -o "$STADTNAVI_CONFIG" "$STADTNAVI_CONFIG_URL"

export LUA_PATH="$PROJECT_DIR/osm2pgsql-themepark/lua/?.lua;;"

osm2pgsql -d $TMP_BUILD_DB \
  --port {{ poi_postgres_port }} \
  --user poi \
  --password {{ poi_postgres_password }} \
  -O flex \
  -S stadtnavi.lua \
  $POI_FILE